
/* -*- c++ -*- */
{ 
    entities = { 
        camera = Camera { 
            depthOfFieldSettings = DepthOfFieldSettings { 
                enabled = false; 
                farBlurRadiusFraction = 0.005; 
                farBlurryPlaneZ = -100; 
                farSharpPlaneZ = -40; 
                focusPlaneZ = -10; 
                lensRadius = 0.01; 
                model = "NONE"; 
                nearBlurRadiusFraction = 0.015; 
                nearBlurryPlaneZ = -0.25; 
                nearSharpPlaneZ = -1; 
            }; 
            
            filmSettings = FilmSettings { 
                antialiasingEnabled = true; 
                antialiasingFilterRadius = 0; 
                antialiasingHighQuality = true; 
                bloomRadiusFraction = 0.015; 
                bloomStrength = 0.25; 
                debugZoom = 1; 
                effectsEnabled = true; 
                gamma = 2.2; 
                sensitivity = 1; 
                toneCurve = Spline { 
                    control = ( 0, 0.1, 0.2, 0.5, 1 ); 
                    extrapolationMode = "LINEAR"; 
                    finalInterval = -1; 
                    interpolationMode = "CUBIC"; 
                    time = ( 0, 0.1, 0.2, 0.5, 1 ); 
                }; 
                
                vignetteBottomStrength = 0.05; 
                vignetteSizeFraction = 0.17; 
                vignetteTopStrength = 0.5; 
            }; 
            
            frame = CFrame::fromXYZYPRDegrees(0, 1, 5, 0, 0, 0 ); 
            motionBlurSettings = MotionBlurSettings { 
                cameraMotionInfluence = 0.5; 
                enabled = false; 
                exposureFraction = 0.75; 
                maxBlurDiameterFraction = 0.1; 
                numSamples = 27; 
            }; 
            
            projection = Projection { 
                farPlaneZ = -200; 
                fovDegrees = 25; 
                fovDirection = "VERTICAL"; 
                nearPlaneZ = -0.1; 
                pixelOffset = Vector2(0, 0 ); 
            }; 
            
            visualizationScale = 1; 
        }; 
        
        cauldron = VisibleEntity { 
            frame = Vector3(0, 1, 0 ); 
            model = "cauldronModel"; 
        }; 
        
        cornellBox = VisibleEntity { 
            frame = CFrame::fromXYZYPRDegrees(0, 0, -0.25 ); 
            model = "cornellModel"; 
        }; 
        
        floorLight = VisibleEntity { 
            frame = CFrame::fromXYZYPRDegrees(0, -0.0422218, 0 ); 
            model = "floorLight"; 
        }; 
        
        light1 = Light { 
            attenuation = ( 0.0001, 0, 1 ); 
            bulbPower = Power3(60 ); 
            castsShadows = true; 
            extent = Vector2(0.75, 0.75 ); 
            frame = CFrame::fromXYZYPRDegrees(0, 1.92, 0, 0, -90, 0 ); 
            shadowMapSize = Vector2int16(1024, 1024 ); 
            spotHalfAngleDegrees = 45; 
            spotSquare = true; 
            type = "SPOT"; 
        }; 
        
        light2 = Light { 
            attenuation = ( 0.0001, 0, 1 ); 
            bulbPower = Power3(60 ); 
            castsShadows = true; 
            extent = Vector2(0.75, 0.75 ); 
            frame = CFrame::fromXYZYPRDegrees(0, 1.92, 0, 0, 0, 0 ); 
            shadowMapSize = Vector2int16(1024, 1024 ); 
            spotHalfAngleDegrees = 45; 
            spotSquare = true; 
            type = "SPOT"; 
        }; 
        
        light3 = Light { 
            attenuation = ( 0.0001, 0, 1 ); 
            bulbPower = Power3(60 ); 
            castsShadows = true; 
            extent = Vector2(0.75, 0.75 ); 
            frame = CFrame::fromXYZYPRDegrees(0, 1.92, 0, 90, 0, 0 ); 
            shadowMapSize = Vector2int16(1024, 1024 ); 
            spotHalfAngleDegrees = 45; 
            spotSquare = true; 
            type = "SPOT"; 
        }; 
        
        light4 = Light { 
            attenuation = ( 0.0001, 0, 1 ); 
            bulbPower = Power3(60 ); 
            castsShadows = true; 
            extent = Vector2(0.75, 0.75 ); 
            frame = CFrame::fromXYZYPRDegrees(0, 1.92, 0, -90, 0, 0 ); 
            shadowMapSize = Vector2int16(1024, 1024 ); 
            spotHalfAngleDegrees = 45; 
            spotSquare = true; 
            type = "SPOT"; 
        }; 
        
        light5 = Light { 
            attenuation = ( 0.0001, 0, 1 ); 
            bulbPower = Power3(60 ); 
            castsShadows = true; 
            extent = Vector2(0.75, 0.75 ); 
            frame = CFrame::fromXYZYPRDegrees(0, 1.92, 0, 180, 0, 180 ); 
            shadowMapSize = Vector2int16(1024, 1024 ); 
            spotHalfAngleDegrees = 45; 
            spotSquare = true; 
            type = "SPOT"; 
        }; 
        
    }; 
    
    lightingEnvironment = LightingEnvironment { 
        ambientOcclusionSettings = AmbientOcclusionSettings { 
            bias = 0.023; 
            blurRadius = 4; 
            blurStepSize = 2; 
            depthPeelSeparationHint = 0.01; 
            edgeSharpness = 1; 
            enabled = true; 
            highQualityBlur = true; 
            intensity = 1; 
            monotonicallyDecreasingBilateralWeights = false; 
            numSamples = 19; 
            packBlurKeys = false; 
            radius = 0.75; 
            temporalFilterSettings = TemporalFilter::Settings { 
                falloffEndDistance = 0.07; 
                falloffStartDistance = 0.05; 
                hysteresis = 0; 
            }; 
            
            temporallyVarySamples = false; 
            useDepthPeelBuffer = false; 
            useNormalBuffer = true; 
            useNormalsInBlur = true; 
            zStorage = "HALF"; 
        }; 
        
        environmentMap = 0.05; 
    }; 
    
    models = { 
        cauldronModel = ArticulatedModel::Specification { 
            filename = "model/cracksv2.obj"; 
            preprocess = { 
                setMaterial(all(), Color3(0.1, 0.1, 0.1 ) ); 
                transformGeometry(all(), Matrix4::scale(0.03, 0.03, 0.03 ) ) }; 
            
        }; 
        
        cornellModel = ArticulatedModel::Specification { 
            filename = "model/CornellBox-Empty-CO.obj"; 
            preprocess = { 
                setMaterial(all(), Color3(0.1, 0.1, 0.1 ) ); 
                transformGeometry(all(), Matrix4::scale(1.2, 1.2, 1.2 ) ) }; 
            
        }; 
        
        floorLight = ArticulatedModel::Specification { 
            filename = "model/crackLight.obj"; 
            preprocess = { 
                transformGeometry(all(), Matrix4::scale(0.02, 0.02, 0.02 ) ) }; 
            
        }; 
        
        lightRig = ArticulatedModel::Specification { 
            filename = "model/lights.obj"; 
            preprocess = { 
                transformGeometry(all(), Matrix4::scale(0.01, 0.01, 0.01 ) ) }; 
            
        }; 
        
        mirrorBall = ArticulatedModel::Specification { 
            filename = "model/sphere.obj"; 
            preprocess = { 
                transformGeometry(all(), Matrix4::scale(0.01, 0.01, 0.01 ) ) }; 
            
        }; 
        
        planeModel = ArticulatedModel::Specification { 
            filename = "model/primitive/square.obj"; 
            preprocess = { 
                setMaterial(all(), Color3(1, 1, 0 ) ); 
                transformGeometry(all(), Matrix4::scale(10, 10, 10 ) ) }; 
            
        }; 
        
        planeModelBack = ArticulatedModel::Specification { 
            filename = "model/primitive/square.obj"; 
            preprocess = { 
                setMaterial(all(), Color3(0.6, 0.47, 0.98 ) ); 
                transformGeometry(all(), Matrix4::scale(10, 10, 10 ) ) }; 
            
        }; 
        
        planeWhite = ArticulatedModel::Specification { 
            filename = "../model/square.obj"; 
            preprocess = { 
                transformGeometry(all(), Matrix4::scale(10, 10, 10 ) ) }; 
            
        }; 
        
    }; 
    
    name = "Cracks (Photon Beams)"; 
} 