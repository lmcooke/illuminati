
/* -*- c++ -*- */
{ 
    entities = { 
        car = VisibleEntity { 
            model = "carModel";

        }; 

        camera = Camera { 
            canChange = false; 
            depthOfFieldSettings = DepthOfFieldSettings { 
                enabled = false; 
                farBlurRadiusFraction = 0.005; 
                farBlurryPlaneZ = -100; 
                farSharpPlaneZ = -40; 
                focusPlaneZ = -10; 
                lensRadius = 0.01; 
                model = "NONE"; 
                nearBlurRadiusFraction = 0.015; 
                nearBlurryPlaneZ = -0.25; 
                nearSharpPlaneZ = -1; 
            }; 
            
            filmSettings = FilmSettings { 
                antialiasingEnabled = true; 
                antialiasingFilterRadius = 0; 
                antialiasingHighQuality = true; 
                bloomRadiusFraction = 0.009; 
                bloomStrength = 0.2; 
                debugZoom = 1; 
                effectsEnabled = true; 
                gamma = 2.2; 
                sensitivity = 1; 
                toneCurve = "CELLULOID";
                
                vignetteBottomStrength = 0.05; 
                vignetteSizeFraction = 0.17; 
                vignetteTopStrength = 0.5; 
            }; 
            
            frame = CFrame::fromXYZYPRDegrees(10, 2, 12, 45, 0, 0 ); 
            motionBlurSettings = MotionBlurSettings { 
                cameraMotionInfluence = 0.5; 
                enabled = false; 
                exposureFraction = 0.75; 
                maxBlurDiameterFraction = 0.1; 
                numSamples = 27; 
            }; 
            
            projection = Projection { 
                farPlaneZ = -200; 
                fovDegrees = 25; 
                fovDirection = "VERTICAL"; 
                nearPlaneZ = -0.1; 
                pixelOffset = Vector2(0, 0 ); 
            }; 
            
            visualizationScale = 1; 
        }; 
        
        light1 = 
        /* singleLight = Light {                    type = "SPOT";                    position             = CFrame::fromXYZYPRDegrees(0, 3, 0.2, 0, -90);                    spotHalfAngleDegrees = 58;                     bulbPower            = Power3(200);                    shadowMapSize        = Vector2int16(4096, 4096);                }; */
        Light { 
            attenuation = ( 0.0001, 0, 1 ); 
            bulbPower = Power3(60 ); 
            canChange = false; 
            castsShadows = true; 
            enabled = true; 
            extent = Vector2(0.75, 0.75 ); 
            frame = CFrame::fromXYZYPRDegrees(0, 1.92, 0, 0, -90, 0 ); 
            producesDirectIllumination = true; 
            producesIndirectIllumination = true; 
            shadowMapSize = Vector2int16(1024, 1024 ); 
            spotHalfAngleDegrees = 45; 
            spotSquare = true; 
            type = "SPOT"; 
        }; 
        
        light2 = Light { 
            attenuation = ( 0.0001, 0, 1 ); 
            bulbPower = Power3(60 ); 
            canChange = false; 
            castsShadows = true; 
            enabled = true; 
            extent = Vector2(0.75, 0.75 ); 
            frame = CFrame::fromXYZYPRDegrees(0, 1.92, 0, 0, 0, 0 ); 
            producesDirectIllumination = true; 
            producesIndirectIllumination = true; 
            shadowMapSize = Vector2int16(1024, 1024 ); 
            spotHalfAngleDegrees = 45; 
            spotSquare = true; 
            type = "SPOT"; 
        }; 
        
        light3 = Light { 
            attenuation = ( 0.0001, 0, 1 ); 
            bulbPower = Power3(60 ); 
            canChange = false; 
            castsShadows = true; 
            enabled = true; 
            extent = Vector2(0.75, 0.75 ); 
            frame = CFrame::fromXYZYPRDegrees(0, 1.92, 0, 90, 0, 0 ); 
            producesDirectIllumination = true; 
            producesIndirectIllumination = true; 
            shadowMapSize = Vector2int16(1024, 1024 ); 
            spotHalfAngleDegrees = 45; 
            spotSquare = true; 
            type = "SPOT"; 
        }; 
        
        light4 = Light { 
            attenuation = ( 0.0001, 0, 1 ); 
            bulbPower = Power3(60 ); 
            canChange = false; 
            castsShadows = true; 
            enabled = true; 
            extent = Vector2(0.75, 0.75 ); 
            frame = CFrame::fromXYZYPRDegrees(0, 1.92, 0, -90, 0, 0 ); 
            producesDirectIllumination = true; 
            producesIndirectIllumination = true; 
            shadowMapSize = Vector2int16(1024, 1024 ); 
            spotHalfAngleDegrees = 45; 
            spotSquare = true; 
            type = "SPOT"; 
        }; 
        
        light5 = Light { 
            attenuation = ( 0.0001, 0, 1 ); 
            bulbPower = Power3(60 ); 
            canChange = false; 
            castsShadows = true; 
            enabled = true; 
            extent = Vector2(0.75, 0.75 ); 
            frame = CFrame::fromXYZYPRDegrees(0, 1.92, 0, 180, 0, 180 ); 
            producesDirectIllumination = true; 
            producesIndirectIllumination = true; 
            shadowMapSize = Vector2int16(1024, 1024 ); 
            spotHalfAngleDegrees = 45; 
            spotSquare = true; 
            type = "SPOT"; 
        }; 
        
        skybox = Skybox { 
            texture = 0.05; 
        }; 
        
    }; 
    
    lightingEnvironment = LightingEnvironment { 
        ambientOcclusionSettings = AmbientOcclusionSettings { 
            bias = 0.028125; 
            blurRadius = 3; 
            blurStepSize = 2; 
            depthPeelSeparationHint = 0.0604059; 
            edgeSharpness = 1; 
            enabled = true; 
            highQualityBlur = true; 
            intensity = 0.52145; 
            monotonicallyDecreasingBilateralWeights = false; 
            numSamples = 42; 
            packBlurKeys = false; 
            radius = 0.46328; 
            temporalFilterSettings = TemporalFilter::Settings { 
                falloffEndDistance = 0.07; 
                falloffStartDistance = 0.05; 
                hysteresis = 0.885417; 
            }; 
            
            temporallyVarySamples = true; 
            useDepthPeelBuffer = true; 
            useNormalBuffer = true; 
            useNormalsInBlur = true; 
            zStorage = "HALF"; 
        }; 
        
        environmentMap = Texture::Specification { 
            encoding = Texture::Encoding { 
                readMultiplyFirst = 0.6; 
            }; 
            
            filename = "cubemap/cornellbox/empty-RG-*.png"; 
        }; 
        
    }; 
    
    models = { 

        boxModel = "model/cornellBox_for_blueno1_1.obj";

        carModel = ArticulatedModel::Specification {
            filename = "model/car.obj";
        }

    }; 
    
    name = "Car (Photon Beams)"; 
} 
